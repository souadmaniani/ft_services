# rewrite reg-ex replacement [flag];
# rewrite ^(/data/.*)/geek/(\w+)\.?.*$ $1/linux/$2.html last;

# url/data/distro/geek/test.php will get rewritten as url/data/distro/linux/test.html
# In this example, when you call the original URL with test.php from the browser,
#  it will get rewritten based on the above rewrite rule and will serve test.html page 
#  from /data/distro/linux/
# $1 in the replacement string will match whatever is inside the 1st parenthesis ( ) 
# in the reg-ex. In our example, $1 is /data/
#------> $1 == url/phpmyadmin

server {
        listen 80;
        return 301 https://$host$request_uri;
}

server {
        # SSL configuration
        #
        listen 443 default_server ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html index.php;
        # New root location
        location / {
                root /var/www/localhost/htdocs;
                # return 404;
        }
        location /phpmyadmin/ {
                index index.php;
                proxy_pass http://192.168.99.230:5000/;
        }
        location /wordpress {
                return 307 http://192.168.99.230:5050;     
        }

        # You may need this to prevent return 404 recursion.
        location = /404.html {
                internal;
        }
        # location = /favicon.ico {
        #         log_not_found off;
        # }
}
